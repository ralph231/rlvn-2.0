<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Uploads</title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="/upload.css">
    <link rel="icon" href="/favicon.png" type="image/x-icon">
</head>
<body>
    <div class="container">
        <div class="upload-container">
            <h1>Upload</h1>

            <!-- Dark Mode Toggle Button -->
            <button class="dark-mode-toggle" onclick="toggleDarkMode()">ðŸŒ™</button>

            <!-- Form -->
            <form action="/upload" method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="title">TITLE</label>
                    <input type="text" name="title" id="titleInput" required>
                </div>

                <div class="form-group">
                    <label for="date">DATE</label>
                    <input type="date" name="date" id="dateInput" required>
                </div>

                <div class="form-group">
                    <label for="media">PHOTOS/VIDEOS:</label>
                    <input type="file" name="media" id="mediaInput" accept="image/*,video/*" multiple onchange="previewFile()" required>
                </div>

                <button type="submit">Upload</button>
            </form>

            <a href="/" class="back-button">Back to Gallery</a>
             <a href="/notes" class="back-button">note</a>
        </div>

        <div class="preview-container">
            <h2>Preview</h2>
            <div id="file-preview">
                <p>No file chosen</p>
            </div>
            <div class="preview-title" id="previewTitle">Title:</div>
            <div class="preview-date" id="previewDate">Date:</div>
        </div>
    </div>

    <script>
        // Dark Mode Toggle Functionality
        const toggleDarkMode = () => {
            const body = document.body;
            const isDarkMode = body.classList.toggle('dark-mode');
            localStorage.setItem('darkModePreference', isDarkMode ? 'enabled' : 'disabled');
        };

        // Apply saved dark mode preference
        window.onload = () => {
            const darkModePreference = localStorage.getItem('darkModePreference');
            if (darkModePreference === 'enabled') {
                document.body.classList.add('dark-mode');
            }
        };

        // Preview multiple files function
        function previewFile() {
            const input = document.getElementById('mediaInput');
            const preview = document.getElementById('file-preview');

            // Clear previous content
            preview.innerHTML = '';

            if (input.files && input.files.length > 0) {
                for (let i = 0; i < input.files.length; i++) {
                    const file = input.files[i];
                    const reader = new FileReader();

                    reader.onload = function (e) {
                        const mediaType = file.type.split('/')[0];
                        const mediaElement = document.createElement(mediaType === 'image' ? 'img' : 'video');
                        mediaElement.src = e.target.result;
                        mediaElement.controls = true;
                        preview.appendChild(mediaElement);
                    };

                    reader.readAsDataURL(file);
                }
                preview.style.display = 'flex';
            } else {
                preview.style.display = 'none';
            }
        }

        // Live preview for title and date
        const titleInput = document.getElementById('titleInput');
        const dateInput = document.getElementById('dateInput');
        const previewTitle = document.getElementById('previewTitle');
        const previewDate = document.getElementById('previewDate');

        titleInput.addEventListener('input', () => {
            previewTitle.textContent = `Title: ${titleInput.value}`;
        });

        dateInput.addEventListener('input', () => {
            previewDate.textContent = `Date: ${dateInput.value}`;
        });
    </script>
</body>
</html>
